version: latest

services:

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbit

  operator:
    image: 127.0.0.1:5000/operator
    build: 
      context: ./
      dockerfile: ./operator_service/Dockerfile
    networks: 
      - rabbit
    stdin_open: true
    tty: true
    depends_on:
      - rabbitmq
#    command: ["bash", "-c", "./wait_for_rabbitmq.sh && exec python /operator_run.py"]

  worker:
    image: 127.0.0.1:5000/worker
    build: 
      context: ./
      dockerfile: ./worker_service/Dockerfile
    networks: 
      - rabbit
    stdin_open: true
    tty: true
    depends_on:
      - rabbitmq
    # command: ["/wait_for_rabbitmq.sh", "&&", "python", "/processing_data.py"]

  output:
    image: 127.0.0.1:5000/output
    build:
      context: ./
      dockerfile: ./output_service/Dockerfile
    volumes: 
      - .:/app/data
    networks: 
      - rabbit
    stdin_open: true
    tty: true
    depends_on:
      - rabbitmq
    # command: ["/wait_for_rabbitmq.sh", "&&", "python", "/output_service.py"]

networks:
  rabbit: # This will create a network called `my_network`
    driver: bridge